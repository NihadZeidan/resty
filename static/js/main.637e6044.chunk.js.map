{"version":3,"sources":["IF.js","Loader.js","Form.js","Headers.js","History.js","SnippetHistory.js","Help.js","App.js","reportWebVitals.js","Header.js","Footer.js","index.js"],"names":["IF","condition","children","Loader","className","Form","props","handelSubmit","e","a","preventDefault","setTimeout","body","target","value","state","Method","fetch","RESTurl","url","method","mode","headers","FromUser","json","data","results","count","setState","Body","flag","localStorage","getItem","newData","JSON","parse","find","obj","push","setItem","stringify","inLocal","handler","handleMethod","valueMethod","innerHTML","UserInput","handleURL","valueURL","handleReRequest","requestHappend","toggle","History","Fragment","onSubmit","this","type","onChange","placeholder","name","onClick","React","Component","Results","id","history","map","element","ind","refill","getDate","hist","SnippetHistory","Help","App","formHandleUpdate","response","header","refillTheForm","formMethod","formURL","exact","path","Object","keys","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","to","Footer","Main","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.637e6044.chunk.js","sourcesContent":["const IF = ({ condition, children }) => condition ? children : null;\nexport default IF","import './SASS/Loader.scss'\n\n\nfunction Loader() {\n  return (\n  <div className=\"loader\"></div>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\nimport \"./SASS/Form.scss\";\n\nimport Loader from \"./Loader\";\nimport IF from \"./IF\";\n\n// https://jsonplaceholder.typicode.com/posts\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      RESTurl: \"\",\n      Method: \"\",\n      History: [],\n      Body: {},\n      results: [],\n      flag: false,\n    };\n  }\n\n  handelSubmit = async (e) => {\n    e.preventDefault();\n    setTimeout(async () => {\n      const body = e.target.body.value;\n\n      let FromUser =\n        this.state.Method === \"POST\" || this.state.Method === \"PUT\"\n          ? await fetch(this.state.RESTurl || this.props.url, {\n              method: this.state.Method || this.props.method,\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: body,\n            })\n          : await fetch(this.state.RESTurl || this.props.url);\n\n      let data = await FromUser.json();\n      let results = data.results;\n      let count = data.count;\n      \n      \n      if (data) {\n        this.setState({ results: data, Body: body, flag: !this.state.flag });\n        const { Method, RESTurl } = this.state;\n\n        if (localStorage.getItem(\"recentInput\")) {\n          let newData = JSON.parse(localStorage.getItem(\"recentInput\"));\n\n          let found = newData.find((obj) => {\n            return obj.Method === Method && obj.RESTurl === RESTurl;\n          });\n\n          if (!found) {\n            newData.push({ Method, RESTurl, data});\n            localStorage.setItem(\"recentInput\", JSON.stringify(newData));\n          }\n        } else {\n          localStorage.setItem(\n            \"recentInput\",\n            JSON.stringify([{ Method, RESTurl, data }])\n          );\n        }\n      }\n      // this.setState({ History: JSON.parse(localStorage.getItem(\"recentInput\")) });\n\n      let inLocal = localStorage.getItem(\"recentInput\")\n\n      this.props.handler(results, count, data, FromUser, inLocal);\n    }, 2000);\n  };\n\n  handleMethod = (e) => {\n    e.preventDefault();\n    let valueMethod = e.target.innerHTML;\n    const UserInput = { ...this.state, Method: valueMethod };\n    this.setState(UserInput);\n  };\n\n  handleURL = (e) => {\n    e.preventDefault();\n    let valueURL = e.target.value;\n    const UserInput = { ...this.state, RESTurl: valueURL };\n    this.setState(UserInput);\n  };\n\n  handleReRequest = () => {\n    if (this.props.requestHappend)\n      this.setState({ Method: this.props.method, RESTurl: this.props.url });\n  };\n\n  toggle = () => {\n    this.setState({ flag: !this.state.flag });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"from\" onSubmit={this.handelSubmit}>\n          <input\n            type=\"text\"\n            onChange={this.handleURL}\n            placeholder=\"Enter URL\"\n          />\n\n          <textarea name=\"body\" placeholder=\"Body Data must be an object\" />\n\n          <button onClick={this.toggle} className=\"go\"> GO !! </button>\n          <IF condition={this.state.flag}>\n            <Loader></Loader>\n          </IF>\n\n          <div className=\"buttons\">\n            <button\n              onClick={this.handleMethod}\n              className=\"get\"\n              value={this.props.method}\n            >\n              GET\n            </button>\n\n            <button\n              onClick={this.handleMethod}\n              className=\"post\"\n              value={this.props.method}\n            >\n              POST\n            </button>\n\n            <button\n              onClick={this.handleMethod}\n              className=\"put\"\n              value={this.props.method}\n            >\n              PUT\n            </button>\n\n            <button\n              onClick={this.handleMethod}\n              className=\"delete\"\n              value={this.props.method}\n            >\n              DELETE\n            </button>\n          </div>\n        </form>\n\n        <div className=\"result\">\n          <h3>Current Search </h3>\n          <p> URL: {this.state.RESTurl || this.props.url} </p>\n          <p> Method: {this.state.Method || this.props.method} </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./SASS/Headers.scss\";\nimport IF from \"./IF\";\n\nclass Results extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <IF condition={this.props.data.headers}>\n          <p id=\"headers\"> Header Request : {this.props.data.headers}</p>\n        </IF>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Results;\n","import './SASS/History.scss'\nimport React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\n\n\n\nclass History extends React.Component {\n \n\n  getDate(history) {\n    if (!history) {\n      return null;\n    }\n    return history.map((element, ind) => {\n      return (\n        <div  className=\"his\" key={ind}>\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              this.props.refill(element.Method, element.RESTurl);\n            }}\n          >\n            {\" \"}\n            Request Again !\n          </button>\n          <p> METHOD: {element.Method}</p>\n          <p> URL: {element.RESTurl}</p>\n         <JSONPretty className='data' data={element.data}></JSONPretty>\n\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div>{this.getDate(this.props.hist)}</div>\n      </>\n    );\n  }\n}\n\nexport default History;\n","import \"./SASS/Historysnip.scss\";\nimport React from \"react\";\n\n\nclass SnippetHistory extends React.Component {\n\n\n  getDate(history) {\n    if (!history) {\n      return null;\n    }\n    \n    return history.map((element, ind) => {\n    return (\n          <div  className=\"hisSnip\" key={ind}>\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                this.props.refill(element.Method, element.RESTurl);\n              }}\n            >\n              {\" \"}\n              Request Again !\n            </button>\n            <p> METHOD: {element.Method}</p>\n            <p> URL: {element.RESTurl}</p>\n          </div>\n    \n      );\n    });\n  }\n\n  render() {\n    return <>{this.getDate(this.props.hist)}</>;\n  }\n}\n\nexport default SnippetHistory;\n","import './SASS/Help.scss'\n\nfunction Help(props) {\n  return (\n    <>\n      <h4> How to use this website !</h4>\n\n      <ul>\n        <li> Input your API Url that you want to get data from. </li>\n        <li> Choose the HTTP method that you want (Default GET)</li>\n        <li>Hit Go button.</li>\n\n        <li>You can see the results and list of recent requests.</li>\n\n        <li>\n          In History tab you can see a full-detail about your search and you can\n          hit Request again to resend the same request.\n        </li>\n\n        <p> Done By: Nihad Zeidan</p>\n      </ul>\n    </>\n  );\n}\n\n\nexport default Help","import \"./SASS/App.scss\";\nimport React from \"react\";\n\n\nimport IF from \"./IF\";\nimport Form from \"./Form\";\nimport Headers from \"./Headers\";\nimport History from \"./History\";\nimport SnippetHistory from \"./SnippetHistory\";\nimport Help from \"./Help\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport JSONPretty from \"react-json-pretty\";\nimport 'react-json-pretty/themes/monikai.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      count: 0,\n      response: {},\n      header: {},\n      formMethod: \"\",\n      formURL: \"\",\n      History:  JSON.parse(localStorage.getItem('recentInput'))\n    };\n  }\n\n  formHandleUpdate = (results, count, response, header, history) => {\n    this.setState({\n      results,\n      count,\n      response,\n      header,\n      History: JSON.parse(history),\n\n    });\n  };\n\n  refillTheForm = (method, url) => {\n    this.setState({ formMethod: method, formURL: url });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <main>\n          <Switch>\n            <Route exact path=\"/history\">\n              <History hist={this.state.History} refill={this.refillTheForm} />\n            </Route>\n\n            <Route exact path=\"/\">\n              <Form\n                handler={this.formHandleUpdate}\n                url={this.state.formURL}\n                method={this.state.formMethod}\n              ></Form>\n              <SnippetHistory  hist={this.state.History} refill={this.refillTheForm} />\n              \n              <Headers data={this.state.header}></Headers>\n\n              <IF condition={Object.keys(this.state.response).length}>\n                <JSONPretty\n                  className=\"json\"\n                  data={this.state.response}\n                ></JSONPretty>\n              </IF>\n            </Route>\n\n            <Route exact path=\"/help\">\n              <Help />\n            </Route>\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./SASS/Header.scss\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1> RESTy</h1>\n      \n        <nav id=\"nav\">\n          <ul>\n            <li>\n              <Link className=\"link\" to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link className=\"link\" to=\"/history\">History</Link>\n            </li>\n            <li>\n              <Link className=\"link\" to=\"/help\"> Help</Link>\n            </li>\n          </ul>\n        </nav>\n      \n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './SASS/Footer.scss';\n\nconst Footer = ()=> {\n    return (\n        <footer>\n            <p>&copy; 2021 Code Fellows and LTUC </p> \n        </footer>\n\n    )\n}\n\nexport default Footer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./SASS/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <App />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<Main />, root);\n\nreportWebVitals();\n"],"sourceRoot":""}