{"version":3,"sources":["Header.js","Footer.js","Loader.js","IF.js","Form.js","Headers.js","History.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","Loader","className","IF","condition","children","Form","props","handleMethod","event","preventDefault","valueMethod","target","value","UserInput","state","Method","setState","handelSubmit","e","a","setTimeout","body","fetch","RESTurl","method","mode","headers","FromUser","json","data","results","Body","flag","count","localStorage","getItem","newData","JSON","parse","find","obj","push","setItem","stringify","handler","handleURL","valueURL","toggle","Fragment","onSubmit","this","type","onChange","placeholder","name","onClick","React","Component","Results","id","History","getDate","localData","App","formHandleUpdate","response","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Main","StrictMode","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.502225a9.chunk.js","sourcesContent":["import './SASS/Header.scss'\nimport React from 'react';\n\nconst Header = ()=> {\n    return (\n        <header>\n            <h1> RESTy</h1>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react';\nimport './SASS/Footer.scss';\n\nconst Footer = ()=> {\n    return (\n        <footer>\n            <p>&copy; 2021 Code Fellows and LTUC </p> \n        </footer>\n\n    )\n}\n\nexport default Footer","import './SASS/Loader.scss'\n\n\nfunction Loader() {\n  return (\n  <div className=\"loader\"></div>\n  );\n}\n\nexport default Loader;\n","const IF = ({ condition, children }) => (condition ? children : null);\nexport default IF","import React from \"react\";\nimport \"./SASS/Form.scss\";\n\nimport Loader from \"./Loader\";\nimport IF from \"./IF\";\n\n// https://jsonplaceholder.typicode.com/posts\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      RESTurl: \"\",\n      Method: \"\",\n      Body: {},\n      results: [],\n      flag: false,\n    };\n  }\n\n  handleMethod = (event) => {\n    event.preventDefault();\n    let valueMethod = event.target.value;\n    const UserInput = { ...this.state, Method: valueMethod };\n    this.setState(UserInput);\n  };\n\n  handelSubmit = async (e) => {\n    e.preventDefault();\n    setTimeout(async () => {\n      const body = e.target.body.value;\n\n      let FromUser =\n        this.state.Method === \"POST\" || this.state.Method === \"PUT\"\n          ? await fetch(this.state.RESTurl, {\n              method: this.state.Method,\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: body,\n            })\n          : await fetch(this.state.RESTurl);\n\n      let data = await FromUser.json();\n\n      this.setState({ results: data, Body: body, flag: !this.state.flag});\n      let results = FromUser.results;\n      let count = FromUser.count;\n\n      if (data) {\n        const { Method, RESTurl } = this.state;\n        if (localStorage.getItem(\"recentInput\")) {\n          let newData = JSON.parse(localStorage.getItem(\"recentInput\"));\n\n          let found = newData.find((obj) => {\n            return obj.Method === Method && obj.RESTurl === RESTurl;\n          });\n\n          if (!found) {\n            newData.push({ Method, RESTurl });\n            localStorage.setItem(\"recentInput\", JSON.stringify(newData));\n          }\n        } else {\n          localStorage.setItem(\n            \"recentInput\",\n            JSON.stringify([{ Method, RESTurl }])\n          );\n        }\n      }\n\n      this.props.handler(results, count, data, FromUser);\n    }, 2000);\n  };\n\n  handleURL = (event) => {\n    let valueURL = event.target.value;\n    const UserInput = { ...this.state, RESTurl: valueURL };\n    this.setState(UserInput);\n  };\n\n  toggle = () => {\n    this.setState({ flag: !this.state.flag });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"from\" onSubmit={this.handelSubmit}>\n          <input type=\"text\" onChange={this.handleURL} placeholder=\"Enter URL HERE\" />\n\n          <textarea name=\"body\" placeholder=\"Body Data must be an object\"/>\n\n          <button onClick={this.toggle}> GO !! </button>\n          <IF condition={this.state.flag}>\n            <Loader></Loader>\n          </IF>\n\n          <div className=\"buttons\">\n            <button onClick={this.handleMethod} className=\"get\" value=\"GET\">\n              GET\n            </button>\n\n            <button onClick={this.handleMethod} className=\"post\" value=\"POST\">\n              POST\n            </button>\n\n            <button onClick={this.handleMethod} className=\"put\" value=\"PUT\">\n              PUT\n            </button>\n\n            <button\n              onClick={this.handleMethod}\n              className=\"delete\"\n              value=\"DELETE\"\n            >\n              DELETE\n            </button>\n          </div>\n        </form>\n\n        <div className=\"result\">\n          <p> URL: {this.state.RESTurl} </p>\n          <p> METHOD: {this.state.Method} </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./SASS/Headers.scss\"\n\n\nclass Results extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <p id=\"headers\"> Header:  {this.props.data.headers}</p>\n\n      \n      </React.Fragment>\n    );\n  }\n}\n\nexport default Results;\n","import React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport IF from './IF'\n\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: false,\n      localData: {},\n    };\n  }\n\n  getDate = () => {\n    let data = JSON.parse(localStorage.getItem(\"recentInput\"));\n    this.setState({ localData: data , flag: !this.state.flag});\n  };\n\n\n  render() {\n    return (\n      <>\n      <button onClick={this.getDate}>Show History</button>\n      <IF condition={this.state.flag}>\n        <JSONPretty data={this.state.localData}></JSONPretty>\n        </IF>\n      </>\n    );\n  }\n}\n\nexport default History;\n","import \"./SASS/App.scss\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Form from \"./Form\";\nimport Headers from \"./Headers\";\nimport History from \"./History\";\n\n\nimport JSONPretty from \"react-json-pretty\";\n\nimport \"./SASS/JSON.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      count: 0,\n      response: {},\n      header: {},\n    };\n  }\n\n  formHandleUpdate = (results, count, response, header) => {\n    this.setState({ results, count, response, header });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header></Header>\n\n        <History> </History>\n\n        <Form handler={this.formHandleUpdate}></Form>\n\n        <Headers data={this.state.header}></Headers>\n\n        \n          <JSONPretty className=\"json\" data={this.state.response}></JSONPretty>\n        \n      \n    \n      \n\n        <Footer></Footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./SASS/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  }\n}\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<Main />, root);\n\nreportWebVitals();\n"],"sourceRoot":""}